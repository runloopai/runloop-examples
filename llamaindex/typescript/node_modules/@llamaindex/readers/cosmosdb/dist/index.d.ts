import { SqlQuerySpec, CosmosClient } from '@azure/cosmos';
import { BaseReader, Document } from '@llamaindex/core/schema';

type SimpleCosmosDBReaderLoaderConfig = {
    /**
     * The name of the database to read.
     */
    databaseName: string;
    /**
     * The name of the container to read.
     */
    containerName: string;
    /**
     * An array of field names to retrieve from each document. Defaults to ["text"].
     */
    fields?: string[];
    /**
     * The separator to join multiple field values. Defaults to an empty string.
     */
    fieldSeparator?: string;
    /**
     * A custom query to filter the documents. Defaults to `SELECT * FROM c`.
     */
    query?: string | SqlQuerySpec;
    /**
     * An optional array of metadata field names. If specified extracts this information as metadata.
     */
    metadataFields?: string[];
};
/**
 * Read data from CosmosDB.
 */
declare class SimpleCosmosDBReader implements BaseReader {
    /**
     * The CosmosDB client.
     */
    private client;
    constructor(client: CosmosClient);
    /**
     * Loads data from a Cosmos DB container
     * @returns {Promise<Document[]>}
     */
    loadData(config: SimpleCosmosDBReaderLoaderConfig): Promise<Document[]>;
}

export { SimpleCosmosDBReader, type SimpleCosmosDBReaderLoaderConfig };
