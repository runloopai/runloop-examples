import type { MessageContent } from "@llamaindex/core/llms";
import type { BaseNodePostprocessor } from "@llamaindex/core/postprocessor";
import type { NodeWithScore } from "@llamaindex/core/schema";
type CohereRerankOptions = {
    topN?: number;
    model?: string;
    apiKey: string | null;
    baseUrl?: string;
    timeout?: number;
};
export declare class CohereRerank implements BaseNodePostprocessor {
    topN: number;
    model: string;
    apiKey: string | null;
    baseUrl: string | undefined;
    timeout: number | undefined;
    private client;
    /**
     * Constructor for CohereRerank.
     * @param topN Number of nodes to return.
     */
    constructor({ topN, model, apiKey, baseUrl, timeout, }: CohereRerankOptions);
    /**
     * Reranks the nodes using the Cohere API.
     * @param nodes Array of nodes with scores.
     * @param query Query string.
     */
    postprocessNodes(nodes: NodeWithScore[], query?: MessageContent): Promise<NodeWithScore[]>;
}
export {};
