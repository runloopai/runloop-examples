// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
var _a;
import * as Core from "./core.mjs";
import * as Errors from "./error.mjs";
import * as Pagination from "./pagination.mjs";
import * as Uploads from "./uploads.mjs";
import * as API from "./resources/index.mjs";
import { BlueprintViewsBlueprintsCursorIDPage, Blueprints, } from "./resources/blueprints.mjs";
import { Repositories, RepositoryConnectionViewsRepositoriesCursorIDPage, } from "./resources/repositories.mjs";
import { DevboxSnapshotViewsDiskSnapshotsCursorIDPage, DevboxViewsDevboxesCursorIDPage, Devboxes, } from "./resources/devboxes/devboxes.mjs";
/**
 * API Client for interfacing with the Runloop API.
 */
export class Runloop extends Core.APIClient {
    /**
     * API Client for interfacing with the Runloop API.
     *
     * @param {string | undefined} [opts.bearerToken=process.env['RUNLOOP_API_KEY'] ?? undefined]
     * @param {string} [opts.baseURL=process.env['RUNLOOP_BASE_URL'] ?? https://api.runloop.ai] - Override the default base URL for the API.
     * @param {number} [opts.timeout=1 minute] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.
     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.
     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.
     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.
     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.
     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.
     */
    constructor({ baseURL = Core.readEnv('RUNLOOP_BASE_URL'), bearerToken = Core.readEnv('RUNLOOP_API_KEY'), ...opts } = {}) {
        if (bearerToken === undefined) {
            throw new Errors.RunloopError("The RUNLOOP_API_KEY environment variable is missing or empty; either provide it, or instantiate the Runloop client with an bearerToken option, like new Runloop({ bearerToken: 'My Bearer Token' }).");
        }
        const options = {
            bearerToken,
            ...opts,
            baseURL: baseURL || `https://api.runloop.ai`,
        };
        super({
            baseURL: options.baseURL,
            timeout: options.timeout ?? 60000 /* 1 minute */,
            httpAgent: options.httpAgent,
            maxRetries: options.maxRetries,
            fetch: options.fetch,
        });
        this.blueprints = new API.Blueprints(this);
        this.devboxes = new API.Devboxes(this);
        this.repositories = new API.Repositories(this);
        this._options = options;
        this.idempotencyHeader = 'x-request-id';
        this.bearerToken = bearerToken;
    }
    defaultQuery() {
        return this._options.defaultQuery;
    }
    defaultHeaders(opts) {
        return {
            ...super.defaultHeaders(opts),
            ...this._options.defaultHeaders,
        };
    }
    authHeaders(opts) {
        return { Authorization: `Bearer ${this.bearerToken}` };
    }
}
_a = Runloop;
Runloop.Runloop = _a;
Runloop.DEFAULT_TIMEOUT = 60000; // 1 minute
Runloop.RunloopError = Errors.RunloopError;
Runloop.APIError = Errors.APIError;
Runloop.APIConnectionError = Errors.APIConnectionError;
Runloop.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;
Runloop.APIUserAbortError = Errors.APIUserAbortError;
Runloop.NotFoundError = Errors.NotFoundError;
Runloop.ConflictError = Errors.ConflictError;
Runloop.RateLimitError = Errors.RateLimitError;
Runloop.BadRequestError = Errors.BadRequestError;
Runloop.AuthenticationError = Errors.AuthenticationError;
Runloop.InternalServerError = Errors.InternalServerError;
Runloop.PermissionDeniedError = Errors.PermissionDeniedError;
Runloop.UnprocessableEntityError = Errors.UnprocessableEntityError;
Runloop.toFile = Uploads.toFile;
Runloop.fileFromPath = Uploads.fileFromPath;
Runloop.Blueprints = Blueprints;
Runloop.BlueprintViewsBlueprintsCursorIDPage = BlueprintViewsBlueprintsCursorIDPage;
Runloop.Devboxes = Devboxes;
Runloop.DevboxViewsDevboxesCursorIDPage = DevboxViewsDevboxesCursorIDPage;
Runloop.DevboxSnapshotViewsDiskSnapshotsCursorIDPage = DevboxSnapshotViewsDiskSnapshotsCursorIDPage;
Runloop.Repositories = Repositories;
Runloop.RepositoryConnectionViewsRepositoriesCursorIDPage = RepositoryConnectionViewsRepositoriesCursorIDPage;
export { toFile, fileFromPath } from "./uploads.mjs";
export { RunloopError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from "./error.mjs";
export default Runloop;
//# sourceMappingURL=index.mjs.map