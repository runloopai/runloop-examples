import { AbstractPage, Response, APIClient, FinalRequestOptions, PageInfo } from "./core.js";
export interface BlueprintsCursorIDPageResponse<Item> {
    blueprints: Array<Item>;
    has_more: boolean;
    total_count: number;
}
export interface BlueprintsCursorIDPageParams {
    starting_after?: string;
    limit?: number;
}
export declare class BlueprintsCursorIDPage<Item extends {
    id: string;
}> extends AbstractPage<Item> implements BlueprintsCursorIDPageResponse<Item> {
    blueprints: Array<Item>;
    has_more: boolean;
    total_count: number;
    constructor(client: APIClient, response: Response, body: BlueprintsCursorIDPageResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    nextPageParams(): Partial<BlueprintsCursorIDPageParams> | null;
    nextPageInfo(): PageInfo | null;
}
export interface DevboxesCursorIDPageResponse<Item> {
    devboxes: Array<Item>;
    has_more: boolean;
    total_count: number;
}
export interface DevboxesCursorIDPageParams {
    starting_after?: string;
    limit?: number;
}
export declare class DevboxesCursorIDPage<Item extends {
    id: string;
}> extends AbstractPage<Item> implements DevboxesCursorIDPageResponse<Item> {
    devboxes: Array<Item>;
    has_more: boolean;
    total_count: number;
    constructor(client: APIClient, response: Response, body: DevboxesCursorIDPageResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    nextPageParams(): Partial<DevboxesCursorIDPageParams> | null;
    nextPageInfo(): PageInfo | null;
}
export interface RepositoriesCursorIDPageResponse<Item> {
    repositories: Array<Item>;
    has_more: boolean;
    total_count: number;
}
export interface RepositoriesCursorIDPageParams {
    starting_after?: string;
    limit?: number;
}
export declare class RepositoriesCursorIDPage<Item extends {
    id: string;
}> extends AbstractPage<Item> implements RepositoriesCursorIDPageResponse<Item> {
    repositories: Array<Item>;
    has_more: boolean;
    total_count: number;
    constructor(client: APIClient, response: Response, body: RepositoriesCursorIDPageResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    nextPageParams(): Partial<RepositoriesCursorIDPageParams> | null;
    nextPageInfo(): PageInfo | null;
}
export interface DiskSnapshotsCursorIDPageResponse<Item> {
    snapshots: Array<Item>;
    has_more: boolean;
    total_count: number;
}
export interface DiskSnapshotsCursorIDPageParams {
    starting_after?: string;
    limit?: number;
}
export declare class DiskSnapshotsCursorIDPage<Item extends {
    id: string;
}> extends AbstractPage<Item> implements DiskSnapshotsCursorIDPageResponse<Item> {
    snapshots: Array<Item>;
    has_more: boolean;
    total_count: number;
    constructor(client: APIClient, response: Response, body: DiskSnapshotsCursorIDPageResponse<Item>, options: FinalRequestOptions);
    getPaginatedItems(): Item[];
    nextPageParams(): Partial<DiskSnapshotsCursorIDPageParams> | null;
    nextPageInfo(): PageInfo | null;
}
//# sourceMappingURL=pagination.d.ts.map