"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoryConnectionViewsRepositoriesCursorIDPage = exports.Repositories = void 0;
const resource_1 = require("../resource.js");
const core_1 = require("../core.js");
const pagination_1 = require("../pagination.js");
class Repositories extends resource_1.APIResource {
    /**
     * Create a connection to a Github Repository and trigger an initial inspection of
     * the repo's technical stack and developer environment requirements.
     */
    create(body, options) {
        return this._client.post('/v1/repositories', { body, ...options });
    }
    /**
     * Get Repository Connection details including latest inspection status and
     * generated respository insights.
     */
    retrieve(id, options) {
        return this._client.get(`/v1/repositories/${id}`, options);
    }
    list(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.list({}, query);
        }
        return this._client.getAPIList('/v1/repositories', RepositoryConnectionViewsRepositoriesCursorIDPage, {
            query,
            ...options,
        });
    }
    /**
     * Permanently Delete a Repository Connection including any automatically generated
     * inspection insights.
     */
    delete(id, body, options) {
        return this._client.post(`/v1/repositories/${id}/delete`, { body, ...options });
    }
    /**
     * List all analyzed versions of a repository connection including automatically
     * generated insights for each version.
     */
    versions(id, options) {
        return this._client.get(`/v1/repositories/${id}/versions`, options);
    }
}
exports.Repositories = Repositories;
class RepositoryConnectionViewsRepositoriesCursorIDPage extends pagination_1.RepositoriesCursorIDPage {
}
exports.RepositoryConnectionViewsRepositoriesCursorIDPage = RepositoryConnectionViewsRepositoriesCursorIDPage;
Repositories.RepositoryConnectionViewsRepositoriesCursorIDPage =
    RepositoryConnectionViewsRepositoriesCursorIDPage;
//# sourceMappingURL=repositories.js.map